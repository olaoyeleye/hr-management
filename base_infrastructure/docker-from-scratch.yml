---
- hosts: hrapp
  become: yes
  #become_user: root
  become_method: sudo
  
  vars:
    version: "2.46.0"

  tasks:
    #- name: Remove directory
    #  file:
    #    state: absent
    #    path: /home/ubuntu/workspace
 
    - name: change directory
      shell:
        cmd: ls
        chdir: /home/ubuntu/workspace/hrapp
      

    - name: list content of pwd
      command: ls -ltr /home/ubuntu/workspace/hrapp


    - name: stop container if exist and running
      command: docker stop hrapp
      ignore_errors: yes

    - name: remove hrapp folder and its content if exists
      command: sudo rm -r hrapp
      ignore_errors: yes

    - name: Remove the container if exist and has been stopped by the previous module
      command: docker rm hrapp
      ignore_errors: yes 

    - name: Remove the image if exist , just to do a clean up before installation
      command: docker rmi hrapp
      ignore_errors: yes


    - name: Log into DockerHub using a custom config file
      docker_login:
        username: "{{username}}"
        password: "{{password}}" 

        
    - name: Pull an image
      community.docker.docker_image:
        name: japostina/hrapp
        source: pull
       # Select platform for pulling. If not specified, will pull whatever docker prefers.
        pull:
          platform: v1

   

    - name: Building Remove the image if exist , just to do a clean up before installation
      command: docker rmi hrapp:v1
      ignore_errors: yes

     
     
    - name: Log out of DockerHub
      docker_login:
        state: absent


    - name: building docker container image out of the docker image that has been built from the previous module
      ansible.builtin.command: docker run -p 80:5000 -e POSTGRES_HOST="{{POSTGRES_HOST}}" -e POSTGRES_USER="project" -e POSTGRES_DATABASE_NAME="{{ POSTGRES_DATABASE_NAME}}" -e POSTGRES_PASSWORD="{{PASSWORD}}" -e TO_ADDRESS="olakunleoyeleye123@gmail.com" -e SOURCE_ADDRESS="olakunleoyeleye123@gmail.com" -e AWS_REGION_NAME="eu-west-1" -e AWS_ACCESS_NAME="{{id}}" -e AWS_KEY_NAME="{{key}}"
      






